require('dotenv').config();
const puppeteer = require('puppeteer');
const { performance } = require('perf_hooks');
const fs = require('fs');

console.log('Loaded ENV:');
console.log('APP_URL:', process.env.APP_URL);
console.log('USERNAME:', process.env.LOGIN_USERNAME);
console.log('PASSWORD:', process.env.LOGIN_PASSWORD);

(async () => {
  const browser = await puppeteer.launch({ headless: false });
  const page = await browser.newPage();

  const metrics = {};

  // ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
  const gotoStart = performance.now();
  await page.goto(process.env.APP_URL, { waitUntil: 'load' });
  const gotoEnd = performance.now();
  metrics.pageLoadTime = (gotoEnd - gotoStart).toFixed(2);

  // ‡∏£‡∏≠‡πÉ‡∏´‡πâ input username ‡πÅ‡∏•‡∏∞ password ‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏Å‡πà‡∏≠‡∏ô
  await page.waitForSelector('#username');
  await page.waitForSelector('#password');

  // ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å env
  console.log(process.env.LOGIN_USERNAME, process.env.LOGIN_PASSWORD);
  await page.type('#username', process.env.LOGIN_USERNAME);
  await page.type('#password', process.env.LOGIN_PASSWORD);

  await new Promise(resolve => setTimeout(resolve, 1000)); // ‡∏û‡∏±‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Å‡πà‡∏≠‡∏ô Login

  // ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ Login
  const loginStart = performance.now();
  await Promise.all([
    page.click('button[type="submit"]'),
    page.waitForNavigation({ waitUntil: 'networkidle0' }),
  ]);
  const loginEnd = performance.now();
  metrics.loginTime = (loginEnd - loginStart).toFixed(2);

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
  const url = page.url();
  metrics.result = url.includes('/admin') ? '‚úÖ Login test passed!' : '‚ùå Login test failed!';

  console.log('\nüìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û:');
  console.log(`- Page Load Time: ${metrics.pageLoadTime} ms`);
  console.log(`- Login Time: ${metrics.loginTime} ms`);
  console.log(`- Result: ${metrics.result}`);

  // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå (‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å .env ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const outputFile = process.env.OUTPUT_FILE || 'login_performance_result.json';
  fs.writeFileSync(outputFile, JSON.stringify(metrics, null, 2));

  // await browser.close();
})();
